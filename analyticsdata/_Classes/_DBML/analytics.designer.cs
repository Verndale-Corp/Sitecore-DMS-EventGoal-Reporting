#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace analyticsdata._DBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="basesite_sc71_analytics")]
	public partial class analyticsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPageEventDefinition(PageEventDefinition instance);
    partial void UpdatePageEventDefinition(PageEventDefinition instance);
    partial void DeletePageEventDefinition(PageEventDefinition instance);
    partial void InsertPageEvent(PageEvent instance);
    partial void UpdatePageEvent(PageEvent instance);
    partial void DeletePageEvent(PageEvent instance);
    partial void InsertVisitor(Visitor instance);
    partial void UpdateVisitor(Visitor instance);
    partial void DeleteVisitor(Visitor instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    #endregion
		
		public analyticsDataContext() : 
				base(global::analyticsdata.Properties.Settings.Default.basesite_sc71_analyticsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public analyticsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public analyticsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public analyticsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public analyticsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PageEventDefinition> PageEventDefinitions
		{
			get
			{
				return this.GetTable<PageEventDefinition>();
			}
		}
		
		public System.Data.Linq.Table<PageEvent> PageEvents
		{
			get
			{
				return this.GetTable<PageEvent>();
			}
		}
		
		public System.Data.Linq.Table<Visitor> Visitors
		{
			get
			{
				return this.GetTable<Visitor>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageEventDefinitions")]
	public partial class PageEventDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageEventDefinitionId;
		
		private string _Name;
		
		private int _Value;
		
		private bool _IsSystem;
		
		private bool _IsAuthorFeedback;
		
		private bool _IsGoal;
		
		private bool _IsFailure;
		
		private string _Category1Label;
		
		private System.Nullable<System.Guid> _Category1Id;
		
		private string _Category2Label;
		
		private System.Nullable<System.Guid> _Category2Id;
		
		private string _Category3Label;
		
		private System.Nullable<System.Guid> _Category3Id;
		
		private EntitySet<PageEvent> _PageEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageEventDefinitionIdChanging(System.Guid value);
    partial void OnPageEventDefinitionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    partial void OnIsAuthorFeedbackChanging(bool value);
    partial void OnIsAuthorFeedbackChanged();
    partial void OnIsGoalChanging(bool value);
    partial void OnIsGoalChanged();
    partial void OnIsFailureChanging(bool value);
    partial void OnIsFailureChanged();
    partial void OnCategory1LabelChanging(string value);
    partial void OnCategory1LabelChanged();
    partial void OnCategory1IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory1IdChanged();
    partial void OnCategory2LabelChanging(string value);
    partial void OnCategory2LabelChanged();
    partial void OnCategory2IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory2IdChanged();
    partial void OnCategory3LabelChanging(string value);
    partial void OnCategory3LabelChanged();
    partial void OnCategory3IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory3IdChanged();
    #endregion
		
		public PageEventDefinition()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventDefinitionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageEventDefinitionId
		{
			get
			{
				return this._PageEventDefinitionId;
			}
			set
			{
				if ((this._PageEventDefinitionId != value))
				{
					this.OnPageEventDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventDefinitionId = value;
					this.SendPropertyChanged("PageEventDefinitionId");
					this.OnPageEventDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuthorFeedback", DbType="Bit NOT NULL")]
		public bool IsAuthorFeedback
		{
			get
			{
				return this._IsAuthorFeedback;
			}
			set
			{
				if ((this._IsAuthorFeedback != value))
				{
					this.OnIsAuthorFeedbackChanging(value);
					this.SendPropertyChanging();
					this._IsAuthorFeedback = value;
					this.SendPropertyChanged("IsAuthorFeedback");
					this.OnIsAuthorFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGoal", DbType="Bit NOT NULL")]
		public bool IsGoal
		{
			get
			{
				return this._IsGoal;
			}
			set
			{
				if ((this._IsGoal != value))
				{
					this.OnIsGoalChanging(value);
					this.SendPropertyChanging();
					this._IsGoal = value;
					this.SendPropertyChanged("IsGoal");
					this.OnIsGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFailure", DbType="Bit NOT NULL")]
		public bool IsFailure
		{
			get
			{
				return this._IsFailure;
			}
			set
			{
				if ((this._IsFailure != value))
				{
					this.OnIsFailureChanging(value);
					this.SendPropertyChanging();
					this._IsFailure = value;
					this.SendPropertyChanged("IsFailure");
					this.OnIsFailureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1Label", DbType="NVarChar(100)")]
		public string Category1Label
		{
			get
			{
				return this._Category1Label;
			}
			set
			{
				if ((this._Category1Label != value))
				{
					this.OnCategory1LabelChanging(value);
					this.SendPropertyChanging();
					this._Category1Label = value;
					this.SendPropertyChanged("Category1Label");
					this.OnCategory1LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category1Id
		{
			get
			{
				return this._Category1Id;
			}
			set
			{
				if ((this._Category1Id != value))
				{
					this.OnCategory1IdChanging(value);
					this.SendPropertyChanging();
					this._Category1Id = value;
					this.SendPropertyChanged("Category1Id");
					this.OnCategory1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2Label", DbType="NVarChar(100)")]
		public string Category2Label
		{
			get
			{
				return this._Category2Label;
			}
			set
			{
				if ((this._Category2Label != value))
				{
					this.OnCategory2LabelChanging(value);
					this.SendPropertyChanging();
					this._Category2Label = value;
					this.SendPropertyChanged("Category2Label");
					this.OnCategory2LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category2Id
		{
			get
			{
				return this._Category2Id;
			}
			set
			{
				if ((this._Category2Id != value))
				{
					this.OnCategory2IdChanging(value);
					this.SendPropertyChanging();
					this._Category2Id = value;
					this.SendPropertyChanged("Category2Id");
					this.OnCategory2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3Label", DbType="NVarChar(100)")]
		public string Category3Label
		{
			get
			{
				return this._Category3Label;
			}
			set
			{
				if ((this._Category3Label != value))
				{
					this.OnCategory3LabelChanging(value);
					this.SendPropertyChanging();
					this._Category3Label = value;
					this.SendPropertyChanged("Category3Label");
					this.OnCategory3LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category3Id
		{
			get
			{
				return this._Category3Id;
			}
			set
			{
				if ((this._Category3Id != value))
				{
					this.OnCategory3IdChanging(value);
					this.SendPropertyChanging();
					this._Category3Id = value;
					this.SendPropertyChanged("Category3Id");
					this.OnCategory3IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageEventDefinition_PageEvent", Storage="_PageEvents", ThisKey="PageEventDefinitionId", OtherKey="PageEventDefinitionId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.PageEventDefinition = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.PageEventDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageEvents")]
	public partial class PageEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageEventId;
		
		private System.Guid _VisitorId;
		
		private System.Guid _PageEventDefinitionId;
		
		private System.Guid _PageId;
		
		private System.Guid _VisitId;
		
		private System.Guid _ItemId;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private string _IntegrationLabel;
		
		private string _DataKey;
		
		private string _Data;
		
		private int _DataCode;
		
		private string _Text;
		
		private long _Timestamp;
		
		private int _CustomSorting;
		
		private System.DateTime _DateTime;
		
		private long _rn;
		
		private EntityRef<PageEventDefinition> _PageEventDefinition;
		
		private EntityRef<Visitor> _Visitor;
		
		private EntityRef<Visit> _Visit;
		
		private EntityRef<Page> _Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageEventIdChanging(System.Guid value);
    partial void OnPageEventIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnPageEventDefinitionIdChanging(System.Guid value);
    partial void OnPageEventDefinitionIdChanged();
    partial void OnPageIdChanging(System.Guid value);
    partial void OnPageIdChanged();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnDataKeyChanging(string value);
    partial void OnDataKeyChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDataCodeChanging(int value);
    partial void OnDataCodeChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTimestampChanging(long value);
    partial void OnTimestampChanged();
    partial void OnCustomSortingChanging(int value);
    partial void OnCustomSortingChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public PageEvent()
		{
			this._PageEventDefinition = default(EntityRef<PageEventDefinition>);
			this._Visitor = default(EntityRef<Visitor>);
			this._Visit = default(EntityRef<Visit>);
			this._Page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageEventId
		{
			get
			{
				return this._PageEventId;
			}
			set
			{
				if ((this._PageEventId != value))
				{
					this.OnPageEventIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventId = value;
					this.SendPropertyChanged("PageEventId");
					this.OnPageEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventDefinitionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PageEventDefinitionId
		{
			get
			{
				return this._PageEventDefinitionId;
			}
			set
			{
				if ((this._PageEventDefinitionId != value))
				{
					if (this._PageEventDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageEventDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventDefinitionId = value;
					this.SendPropertyChanged("PageEventDefinitionId");
					this.OnPageEventDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(100)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DataKey
		{
			get
			{
				return this._DataKey;
			}
			set
			{
				if ((this._DataKey != value))
				{
					this.OnDataKeyChanging(value);
					this.SendPropertyChanging();
					this._DataKey = value;
					this.SendPropertyChanged("DataKey");
					this.OnDataKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCode", DbType="Int NOT NULL")]
		public int DataCode
		{
			get
			{
				return this._DataCode;
			}
			set
			{
				if ((this._DataCode != value))
				{
					this.OnDataCodeChanging(value);
					this.SendPropertyChanging();
					this._DataCode = value;
					this.SendPropertyChanged("DataCode");
					this.OnDataCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="BigInt NOT NULL")]
		public long Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSorting", DbType="Int NOT NULL")]
		public int CustomSorting
		{
			get
			{
				return this._CustomSorting;
			}
			set
			{
				if ((this._CustomSorting != value))
				{
					this.OnCustomSortingChanging(value);
					this.SendPropertyChanging();
					this._CustomSorting = value;
					this.SendPropertyChanged("CustomSorting");
					this.OnCustomSortingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DateTime", Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageEventDefinition_PageEvent", Storage="_PageEventDefinition", ThisKey="PageEventDefinitionId", OtherKey="PageEventDefinitionId", IsForeignKey=true)]
		public PageEventDefinition PageEventDefinition
		{
			get
			{
				return this._PageEventDefinition.Entity;
			}
			set
			{
				PageEventDefinition previousValue = this._PageEventDefinition.Entity;
				if (((previousValue != value) 
							|| (this._PageEventDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageEventDefinition.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._PageEventDefinition.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._PageEventDefinitionId = value.PageEventDefinitionId;
					}
					else
					{
						this._PageEventDefinitionId = default(System.Guid);
					}
					this.SendPropertyChanged("PageEventDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_PageEvent", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_PageEvent", Storage="_Visit", ThisKey="VisitId", OtherKey="VisitId", IsForeignKey=true)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._VisitId = value.VisitId;
					}
					else
					{
						this._VisitId = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageEvent", Storage="_Page", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(System.Guid);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visitors")]
	public partial class Visitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VisitorId;
		
		private int _VisitorClassification;
		
		private int _OverrideVisitorClassification;
		
		private int _VisitCount;
		
		private int _Value;
		
		private int _AuthenticationLevel;
		
		private string _ExternalUser;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private string _IntegrationLabel;
		
		private long _rn;
		
		private EntitySet<PageEvent> _PageEvents;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<Page> _Pages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitorClassificationChanging(int value);
    partial void OnVisitorClassificationChanged();
    partial void OnOverrideVisitorClassificationChanging(int value);
    partial void OnOverrideVisitorClassificationChanged();
    partial void OnVisitCountChanging(int value);
    partial void OnVisitCountChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnAuthenticationLevelChanging(int value);
    partial void OnAuthenticationLevelChanged();
    partial void OnExternalUserChanging(string value);
    partial void OnExternalUserChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Visitor()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorClassification", DbType="Int NOT NULL")]
		public int VisitorClassification
		{
			get
			{
				return this._VisitorClassification;
			}
			set
			{
				if ((this._VisitorClassification != value))
				{
					this.OnVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._VisitorClassification = value;
					this.SendPropertyChanged("VisitorClassification");
					this.OnVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideVisitorClassification", DbType="Int NOT NULL")]
		public int OverrideVisitorClassification
		{
			get
			{
				return this._OverrideVisitorClassification;
			}
			set
			{
				if ((this._OverrideVisitorClassification != value))
				{
					this.OnOverrideVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._OverrideVisitorClassification = value;
					this.SendPropertyChanged("OverrideVisitorClassification");
					this.OnOverrideVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitCount", DbType="Int NOT NULL")]
		public int VisitCount
		{
			get
			{
				return this._VisitCount;
			}
			set
			{
				if ((this._VisitCount != value))
				{
					this.OnVisitCountChanging(value);
					this.SendPropertyChanging();
					this._VisitCount = value;
					this.SendPropertyChanged("VisitCount");
					this.OnVisitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationLevel", DbType="Int NOT NULL")]
		public int AuthenticationLevel
		{
			get
			{
				return this._AuthenticationLevel;
			}
			set
			{
				if ((this._AuthenticationLevel != value))
				{
					this.OnAuthenticationLevelChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationLevel = value;
					this.SendPropertyChanged("AuthenticationLevel");
					this.OnAuthenticationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalUser", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ExternalUser
		{
			get
			{
				return this._ExternalUser;
			}
			set
			{
				if ((this._ExternalUser != value))
				{
					this.OnExternalUserChanging(value);
					this.SendPropertyChanging();
					this._ExternalUser = value;
					this.SendPropertyChanged("ExternalUser");
					this.OnExternalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(100)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_PageEvent", Storage="_PageEvents", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Visit", Storage="_Visits", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Page", Storage="_Pages", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visits")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VisitId;
		
		private System.Guid _VisitorId;
		
		private int _VisitorVisitIndex;
		
		private int _VisitPageCount;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private int _TrafficType;
		
		private int _Value;
		
		private string _AspNetSessionId;
		
		private System.Guid _ReferringSiteId;
		
		private System.Guid _KeywordsId;
		
		private System.Guid _BrowserId;
		
		private System.Guid _UserAgentId;
		
		private System.Guid _OsId;
		
		private System.Guid _ScreenId;
		
		private System.Nullable<System.Guid> _CampaignId;
		
		private string _RDNS;
		
		private string _MultiSite;
		
		private System.Guid _LocationId;
		
		private System.Data.Linq.Binary _Ip;
		
		private string _BusinessName;
		
		private string _City;
		
		private string _PostalCode;
		
		private string _MetroCode;
		
		private string _AreaCode;
		
		private string _Region;
		
		private string _IspName;
		
		private string _Country;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private System.Nullable<System.Guid> _TestSetId;
		
		private System.Data.Linq.Binary _TestValues;
		
		private string _Referrer;
		
		private byte _State;
		
		private System.Nullable<System.DateTime> _StateChanged;
		
		private string _DeviceName;
		
		private string _Language;
		
		private long _rn;
		
		private EntitySet<PageEvent> _PageEvents;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitorVisitIndexChanging(int value);
    partial void OnVisitorVisitIndexChanged();
    partial void OnVisitPageCountChanging(int value);
    partial void OnVisitPageCountChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnTrafficTypeChanging(int value);
    partial void OnTrafficTypeChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnAspNetSessionIdChanging(string value);
    partial void OnAspNetSessionIdChanged();
    partial void OnReferringSiteIdChanging(System.Guid value);
    partial void OnReferringSiteIdChanged();
    partial void OnKeywordsIdChanging(System.Guid value);
    partial void OnKeywordsIdChanged();
    partial void OnBrowserIdChanging(System.Guid value);
    partial void OnBrowserIdChanged();
    partial void OnUserAgentIdChanging(System.Guid value);
    partial void OnUserAgentIdChanged();
    partial void OnOsIdChanging(System.Guid value);
    partial void OnOsIdChanged();
    partial void OnScreenIdChanging(System.Guid value);
    partial void OnScreenIdChanged();
    partial void OnCampaignIdChanging(System.Nullable<System.Guid> value);
    partial void OnCampaignIdChanged();
    partial void OnRDNSChanging(string value);
    partial void OnRDNSChanged();
    partial void OnMultiSiteChanging(string value);
    partial void OnMultiSiteChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnIpChanging(System.Data.Linq.Binary value);
    partial void OnIpChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnMetroCodeChanging(string value);
    partial void OnMetroCodeChanged();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnIspNameChanging(string value);
    partial void OnIspNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnTestSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnTestSetIdChanged();
    partial void OnTestValuesChanging(System.Data.Linq.Binary value);
    partial void OnTestValuesChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnStateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnStateChangedChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Visit()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorVisitIndex", DbType="Int NOT NULL")]
		public int VisitorVisitIndex
		{
			get
			{
				return this._VisitorVisitIndex;
			}
			set
			{
				if ((this._VisitorVisitIndex != value))
				{
					this.OnVisitorVisitIndexChanging(value);
					this.SendPropertyChanging();
					this._VisitorVisitIndex = value;
					this.SendPropertyChanged("VisitorVisitIndex");
					this.OnVisitorVisitIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitPageCount", DbType="Int NOT NULL")]
		public int VisitPageCount
		{
			get
			{
				return this._VisitPageCount;
			}
			set
			{
				if ((this._VisitPageCount != value))
				{
					this.OnVisitPageCountChanging(value);
					this.SendPropertyChanging();
					this._VisitPageCount = value;
					this.SendPropertyChanged("VisitPageCount");
					this.OnVisitPageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficType", DbType="Int NOT NULL")]
		public int TrafficType
		{
			get
			{
				return this._TrafficType;
			}
			set
			{
				if ((this._TrafficType != value))
				{
					this.OnTrafficTypeChanging(value);
					this.SendPropertyChanging();
					this._TrafficType = value;
					this.SendPropertyChanged("TrafficType");
					this.OnTrafficTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetSessionId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AspNetSessionId
		{
			get
			{
				return this._AspNetSessionId;
			}
			set
			{
				if ((this._AspNetSessionId != value))
				{
					this.OnAspNetSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetSessionId = value;
					this.SendPropertyChanged("AspNetSessionId");
					this.OnAspNetSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferringSiteId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReferringSiteId
		{
			get
			{
				return this._ReferringSiteId;
			}
			set
			{
				if ((this._ReferringSiteId != value))
				{
					this.OnReferringSiteIdChanging(value);
					this.SendPropertyChanging();
					this._ReferringSiteId = value;
					this.SendPropertyChanged("ReferringSiteId");
					this.OnReferringSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeywordsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid KeywordsId
		{
			get
			{
				return this._KeywordsId;
			}
			set
			{
				if ((this._KeywordsId != value))
				{
					this.OnKeywordsIdChanging(value);
					this.SendPropertyChanging();
					this._KeywordsId = value;
					this.SendPropertyChanged("KeywordsId");
					this.OnKeywordsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BrowserId
		{
			get
			{
				return this._BrowserId;
			}
			set
			{
				if ((this._BrowserId != value))
				{
					this.OnBrowserIdChanging(value);
					this.SendPropertyChanging();
					this._BrowserId = value;
					this.SendPropertyChanged("BrowserId");
					this.OnBrowserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAgentId
		{
			get
			{
				return this._UserAgentId;
			}
			set
			{
				if ((this._UserAgentId != value))
				{
					this.OnUserAgentIdChanging(value);
					this.SendPropertyChanging();
					this._UserAgentId = value;
					this.SendPropertyChanged("UserAgentId");
					this.OnUserAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OsId
		{
			get
			{
				return this._OsId;
			}
			set
			{
				if ((this._OsId != value))
				{
					this.OnOsIdChanging(value);
					this.SendPropertyChanging();
					this._OsId = value;
					this.SendPropertyChanged("OsId");
					this.OnOsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScreenId
		{
			get
			{
				return this._ScreenId;
			}
			set
			{
				if ((this._ScreenId != value))
				{
					this.OnScreenIdChanging(value);
					this.SendPropertyChanging();
					this._ScreenId = value;
					this.SendPropertyChanged("ScreenId");
					this.OnScreenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDNS", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string RDNS
		{
			get
			{
				return this._RDNS;
			}
			set
			{
				if ((this._RDNS != value))
				{
					this.OnRDNSChanging(value);
					this.SendPropertyChanging();
					this._RDNS = value;
					this.SendPropertyChanged("RDNS");
					this.OnRDNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiSite", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string MultiSite
		{
			get
			{
				return this._MultiSite;
			}
			set
			{
				if ((this._MultiSite != value))
				{
					this.OnMultiSiteChanging(value);
					this.SendPropertyChanging();
					this._MultiSite = value;
					this.SendPropertyChanged("MultiSite");
					this.OnMultiSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="VarBinary(16) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetroCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MetroCode
		{
			get
			{
				return this._MetroCode;
			}
			set
			{
				if ((this._MetroCode != value))
				{
					this.OnMetroCodeChanging(value);
					this.SendPropertyChanging();
					this._MetroCode = value;
					this.SendPropertyChanged("MetroCode");
					this.OnMetroCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IspName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IspName
		{
			get
			{
				return this._IspName;
			}
			set
			{
				if ((this._IspName != value))
				{
					this.OnIspNameChanging(value);
					this.SendPropertyChanging();
					this._IspName = value;
					this.SendPropertyChanged("IspName");
					this.OnIspNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TestSetId
		{
			get
			{
				return this._TestSetId;
			}
			set
			{
				if ((this._TestSetId != value))
				{
					this.OnTestSetIdChanging(value);
					this.SendPropertyChanging();
					this._TestSetId = value;
					this.SendPropertyChanged("TestSetId");
					this.OnTestSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestValues", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TestValues
		{
			get
			{
				return this._TestValues;
			}
			set
			{
				if ((this._TestValues != value))
				{
					this.OnTestValuesChanging(value);
					this.SendPropertyChanging();
					this._TestValues = value;
					this.SendPropertyChanged("TestValues");
					this.OnTestValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateChanged", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StateChanged
		{
			get
			{
				return this._StateChanged;
			}
			set
			{
				if ((this._StateChanged != value))
				{
					this.OnStateChangedChanging(value);
					this.SendPropertyChanging();
					this._StateChanged = value;
					this.SendPropertyChanged("StateChanged");
					this.OnStateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_PageEvent", Storage="_PageEvents", ThisKey="VisitId", OtherKey="VisitId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Page", Storage="_Pages", ThisKey="VisitId", OtherKey="VisitId")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Visit", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageId;
		
		private System.Guid _VisitId;
		
		private System.Guid _VisitorId;
		
		private int _VisitPageIndex;
		
		private System.DateTime _DateTime;
		
		private System.Guid _ItemId;
		
		private string _ItemLanguage;
		
		private int _ItemVersion;
		
		private System.Guid _DeviceId;
		
		private string _Url;
		
		private string _UrlText;
		
		private System.Nullable<System.Guid> _TestSetId;
		
		private System.Data.Linq.Binary _TestValues;
		
		private System.Nullable<int> _Duration;
		
		private string _Data;
		
		private string _DeviceName;
		
		private long _rn;
		
		private EntitySet<PageEvent> _PageEvents;
		
		private EntityRef<Visitor> _Visitor;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(System.Guid value);
    partial void OnPageIdChanged();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitPageIndexChanging(int value);
    partial void OnVisitPageIndexChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnItemLanguageChanging(string value);
    partial void OnItemLanguageChanged();
    partial void OnItemVersionChanging(int value);
    partial void OnItemVersionChanged();
    partial void OnDeviceIdChanging(System.Guid value);
    partial void OnDeviceIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUrlTextChanging(string value);
    partial void OnUrlTextChanged();
    partial void OnTestSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnTestSetIdChanged();
    partial void OnTestValuesChanging(System.Data.Linq.Binary value);
    partial void OnTestValuesChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Page()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			this._Visitor = default(EntityRef<Visitor>);
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitPageIndex", DbType="Int NOT NULL")]
		public int VisitPageIndex
		{
			get
			{
				return this._VisitPageIndex;
			}
			set
			{
				if ((this._VisitPageIndex != value))
				{
					this.OnVisitPageIndexChanging(value);
					this.SendPropertyChanging();
					this._VisitPageIndex = value;
					this.SendPropertyChanged("VisitPageIndex");
					this.OnVisitPageIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLanguage", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemLanguage
		{
			get
			{
				return this._ItemLanguage;
			}
			set
			{
				if ((this._ItemLanguage != value))
				{
					this.OnItemLanguageChanging(value);
					this.SendPropertyChanging();
					this._ItemLanguage = value;
					this.SendPropertyChanged("ItemLanguage");
					this.OnItemLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemVersion", DbType="Int NOT NULL")]
		public int ItemVersion
		{
			get
			{
				return this._ItemVersion;
			}
			set
			{
				if ((this._ItemVersion != value))
				{
					this.OnItemVersionChanging(value);
					this.SendPropertyChanging();
					this._ItemVersion = value;
					this.SendPropertyChanged("ItemVersion");
					this.OnItemVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(800) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UrlText
		{
			get
			{
				return this._UrlText;
			}
			set
			{
				if ((this._UrlText != value))
				{
					this.OnUrlTextChanging(value);
					this.SendPropertyChanging();
					this._UrlText = value;
					this.SendPropertyChanged("UrlText");
					this.OnUrlTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TestSetId
		{
			get
			{
				return this._TestSetId;
			}
			set
			{
				if ((this._TestSetId != value))
				{
					this.OnTestSetIdChanging(value);
					this.SendPropertyChanging();
					this._TestSetId = value;
					this.SendPropertyChanged("TestSetId");
					this.OnTestSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestValues", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TestValues
		{
			get
			{
				return this._TestValues;
			}
			set
			{
				if ((this._TestValues != value))
				{
					this.OnTestValuesChanging(value);
					this.SendPropertyChanging();
					this._TestValues = value;
					this.SendPropertyChanged("TestValues");
					this.OnTestValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageEvent", Storage="_PageEvents", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Page", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Page", Storage="_Visit", ThisKey="VisitId", OtherKey="VisitId", IsForeignKey=true)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._VisitId = value.VisitId;
					}
					else
					{
						this._VisitId = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
}
#pragma warning restore 1591
